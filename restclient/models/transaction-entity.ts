/* tslint:disable */
/* eslint-disable */
/**
 * KarmaMarketplace
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import { BaseEvent } from './base-event';
import { Money } from './money';
import { TransactionPropsEntity } from './transaction-props-entity';
import { TransactionProviderEntity } from './transaction-provider-entity';
import { UserEntity } from './user-entity';
 /**
 * 
 *
 * @export
 * @interface TransactionEntity
 */
export interface TransactionEntity {

    /**
     * @type {string}
     * @memberof TransactionEntity
     */
    id: string;

    /**
     * @type {Array<BaseEvent>}
     * @memberof TransactionEntity
     */
    domainEvents?: Array<BaseEvent> | null;

    /**
     * @type {string}
     * @memberof TransactionEntity
     */
    createdById?: string | null;

    /**
     * @type {Date}
     * @memberof TransactionEntity
     */
    createdAt?: Date | null;

    /**
     * @type {string}
     * @memberof TransactionEntity
     */
    lastModifiedById?: string | null;

    /**
     * @type {Date}
     * @memberof TransactionEntity
     */
    lastModifiedAt?: Date | null;

    /**
     * @type {Money}
     * @memberof TransactionEntity
     */
    amount: Money;

    /**
     * @type {string}
     * @memberof TransactionEntity
     */
    operation: TransactionEntityOperationEnum;

    /**
     * @type {string}
     * @memberof TransactionEntity
     */
    direction: TransactionEntityDirectionEnum;

    /**
     * @type {string}
     * @memberof TransactionEntity
     */
    status: TransactionEntityStatusEnum;

    /**
     * @type {UserEntity}
     * @memberof TransactionEntity
     */
    createdByUser: UserEntity;

    /**
     * @type {Date}
     * @memberof TransactionEntity
     */
    completedAt?: Date | null;

    /**
     * @type {Money}
     * @memberof TransactionEntity
     */
    fee: Money;

    /**
     * @type {TransactionProviderEntity}
     * @memberof TransactionEntity
     */
    provider: TransactionProviderEntity;

    /**
     * @type {TransactionPropsEntity}
     * @memberof TransactionEntity
     */
    props?: TransactionPropsEntity;
}

/**
 * @export
 * @enum {string}
 */
export enum TransactionEntityOperationEnum {
    Sell = 'Sell',
    Withdraw = 'Withdraw',
    ManualBalanceDecrease = 'ManualBalanceDecrease',
    ProductPremiumPriority = 'ProductPremiumPriority',
    ManualBalanceIncrease = 'ManualBalanceIncrease',
    Deposit = 'Deposit',
    Frozen = 'Frozen',
    Buy = 'Buy',
    ReferralBonus = 'ReferralBonus'
}
/**
 * @export
 * @enum {string}
 */
export enum TransactionEntityDirectionEnum {
    In = 'In',
    Out = 'Out'
}
/**
 * @export
 * @enum {string}
 */
export enum TransactionEntityStatusEnum {
    RolledBack = 'RolledBack',
    Confirmed = 'Confirmed',
    Failed = 'Failed',
    Expired = 'Expired',
    Pending = 'Pending'
}

